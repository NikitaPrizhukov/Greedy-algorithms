#include <iostream>
#include <vector>
using namespace std;

int main() {

	int lessens;
	cin >> lessens;
	int count = 0;
	vector<int> number;

	double** matrix = new double* [lessens];
	for (int i = 0; i < lessens; i++) {
		matrix[i] = new double[2];
	}

	for (int i = 0; i < lessens; i++) {
		cin >> matrix[i][0] >> matrix[i][1];
	}
	count++;


	for (int i = 0; i < lessens; i++) {
		for (int f = 1; f < lessens; f++) {
			if (matrix[f][1] < matrix[f - 1][1]) {
				double dop[1][2];
				dop[0][0] = matrix[f - 1][0];
				dop[0][1] = matrix[f - 1][1];
				matrix[f - 1][0] = matrix[f][0];
				matrix[f - 1][1] = matrix[f][1];
				matrix[f][0] = dop[0][0];
				matrix[f][1] = dop[0][1];
			}
			if (matrix[f][1] == matrix[f - 1][1]) {
				if (matrix[f - 1][0] > matrix[f][0]) {
					double dop[1][2];
					dop[0][0] = matrix[f - 1][0];
					dop[0][1] = matrix[f - 1][1];
					matrix[f - 1][0] = matrix[f][0];
					matrix[f - 1][1] = matrix[f][1];
					matrix[f][0] = dop[0][0];
					matrix[f][1] = dop[0][1];
				}
			}
		}
	}

	number.push_back(0);
	double dop[1][2];
	dop[0][0] = matrix[0][0];
	dop[0][1] = matrix[0][1];

	for (int i = 1; i < lessens; i++) {
		if (dop[0][1] <= matrix[i][0]) {
			number.push_back(i);
			dop[0][0] = matrix[i][0];
			dop[0][1] = matrix[i][1];
		}
	}

	cout << number.size() << endl;

	for (int i = 0; i < number.size(); i++) {
		cout << matrix[number[i]][0] << " " << matrix[number[i]][1] << endl;
	}

	return 0;
}
